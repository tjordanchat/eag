
pnl : stmt, pnl;.

stmt: seq of moments;
			one moment.
			
seq of moments: orig moment, qu, sequels.

one moment: association stmt ; stack assignment; field rights; layout stmt;
						assignment stmt; state raise.

orig moment: possibility, co, orig moment; possibility.

sequels: sequel, qu, sequels; sequel. 

association stmt: ltype, ltype, association stmt;
									ltype, ltype, ltype, association stmt;
									ltype, ltype;
									ltype, ltype, ltype.

ltype: str; field rights; input type; 

stack assignment: stack, eq, border crossings.


border crossings: border crossing, border crossings; border crossing.

border crossing: {\-+},var.

set push pull: var, eq, list of push pulls.

list of push pulls: push pull, list of push pulls; push pull.

state or var: var.

assignment stmt: var, eq, value.

ext function: sq, function call, sq.

possibility: forEach possibility; forAll possibility.

forEach possibility: ob, orig moment, cb.
forAll  possibility: op, orig moment, cp.

moment: possibility; possibility, moment.

assertion stmt: assignment stmt, se; 
								increment, se; 
								decrement, se.

flow stmt: cond, results, se.

results: result, results;.

resources: resource; resource, c, resources.

set: item, set;.

cond: decision, cond;.

decision: truth; tvlaue, rel, tvalue.

push pull: {\-+}, {\-+}, state or val.

field rights: {\-+}, {\-+}, var.

var: {a-zA-Z },{a-zA-Z0-9 }*!, l.

state raise: "+", var.

layout stmt: "'", layout spec, sq, l.

inpute type: "%", var, l.

str: "\"", str body, "\"".

str body: ^{\"}*!, str body;
          "\\\"", str body;
          "\\\\", str body;.

co: ",", l.

op: "(", l.

cp: ")", l.

ob: "[", l.

cb: "]", l.

eq: "=", l.

qu: "?", l.

se: ";", l.

sq: "'", l.

